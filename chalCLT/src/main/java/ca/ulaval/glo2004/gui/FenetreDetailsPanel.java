/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ca.ulaval.glo2004.gui;

import ca.ulaval.glo2004.domain.Controleur;
import ca.ulaval.glo2004.domain.gestion_chalet.Accessoire;
import ca.ulaval.glo2004.domain.gestion_chalet.accessoires.Fenetre;
import ca.ulaval.glo2004.domain.gestion_chalet.Mur;
import ca.ulaval.glo2004.services.CaisseOutils;
import ca.ulaval.glo2004.services.Orientations;
import ca.ulaval.glo2004.services.UniteImperiale;

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.dnd.DragGestureEvent;
import java.awt.dnd.DragGestureListener;
import java.awt.event.ActionEvent;
import java.io.IOException;

/**
 * @author safae
 */
public class FenetreDetailsPanel extends javax.swing.JPanel implements Transferable, DragGestureListener {

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Largeur;
    private javax.swing.JLabel accesoireValidite_label;
    private javax.swing.JButton creerFenetre_btn;
    private javax.swing.JButton deplacer_btn;
    private javax.swing.JTextField emplacementx_textField;
    private javax.swing.JTextField emplacementy_textField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField largeurTextField;
    private javax.swing.JLabel longueur;
    private javax.swing.JTextField longueurTextField;
    private javax.swing.JButton redimensionerFenetre;
    private javax.swing.JButton supprimerFenetre;
    // End of variables declaration//GEN-END:variables
    private Controleur controleur;
    private MainWindow mainWindow;
    private boolean modeCreation;


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        supprimerFenetre = new javax.swing.JButton();
        redimensionerFenetre = new javax.swing.JButton();
        deplacer_btn = new javax.swing.JButton();
        creerFenetre_btn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Largeur = new javax.swing.JLabel();
        largeurTextField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        longueurTextField = new javax.swing.JTextField();
        longueur = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        emplacementx_textField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        emplacementy_textField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        accesoireValidite_label = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(300, 350));

        jPanel1.setMaximumSize(new java.awt.Dimension(100, 32767));
        jPanel1.setMinimumSize(new java.awt.Dimension(100, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(100, 257));

        supprimerFenetre.setText("Supprimer Fenêtre");
        supprimerFenetre.setMaximumSize(new java.awt.Dimension(100, 35));
        supprimerFenetre.setMinimumSize(new java.awt.Dimension(100, 35));
        supprimerFenetre.setPreferredSize(new java.awt.Dimension(100, 35));
        supprimerFenetre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerFenetreActionPerformed(evt);
            }
        });

        redimensionerFenetre.setText("Redimensioner Fenêtre");
        redimensionerFenetre.setMaximumSize(new java.awt.Dimension(100, 35));
        redimensionerFenetre.setMinimumSize(new java.awt.Dimension(100, 35));
        redimensionerFenetre.setPreferredSize(new java.awt.Dimension(100, 35));
        redimensionerFenetre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redimensionerFenetreActionPerformed(evt);
            }
        });

        deplacer_btn.setText("Déplacer");
        deplacer_btn.setMaximumSize(new java.awt.Dimension(100, 35));
        deplacer_btn.setMinimumSize(new java.awt.Dimension(100, 35));
        deplacer_btn.setPreferredSize(new java.awt.Dimension(100, 35));
        deplacer_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deplacer_btnActionPerformed(evt);
            }
        });

        creerFenetre_btn.setText("Creer Fenêtre");
        creerFenetre_btn.setMaximumSize(new java.awt.Dimension(100, 35));
        creerFenetre_btn.setMinimumSize(new java.awt.Dimension(100, 35));
        creerFenetre_btn.setPreferredSize(new java.awt.Dimension(100, 35));
        creerFenetre_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creerFenetre_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(supprimerFenetre, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                    .addComponent(redimensionerFenetre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(creerFenetre_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deplacer_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(creerFenetre_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(deplacer_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(redimensionerFenetre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(supprimerFenetre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        Largeur.setText("Largeur");

        largeurTextField.setPreferredSize(new java.awt.Dimension(100, 30));
        largeurTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                largeurTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Largeur, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(largeurTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(largeurTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Largeur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        longueurTextField.setPreferredSize(new java.awt.Dimension(100, 30));

        longueur.setText("Longueur");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(longueur)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(longueurTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(longueurTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(longueur))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        emplacementx_textField.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel1.setText("Emplacement x");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(emplacementx_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emplacementx_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        emplacementy_textField.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel2.setText("Emplacement y");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(emplacementy_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emplacementy_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        accesoireValidite_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        accesoireValidite_label.setMaximumSize(new java.awt.Dimension(150, 25));
        accesoireValidite_label.setMinimumSize(new java.awt.Dimension(150, 25));
        accesoireValidite_label.setName(""); // NOI18N
        accesoireValidite_label.setPreferredSize(new java.awt.Dimension(150, 25));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(accesoireValidite_label, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(accesoireValidite_label, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Creates new form FenetreDetailsPanel
     */
    public FenetreDetailsPanel(MainWindow p_mainWindow, Controleur p_controleur) {
        mainWindow = p_mainWindow;
        controleur = p_controleur;
        modeCreation = false;
        initComponents();
        preparerTextFields();
    }

    private void preparerTextFields() {
        DocumentListener textFieldListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateButtonState();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateButtonState();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateButtonState();
            }

        };
        longueurTextField.getDocument().addDocumentListener(textFieldListener);
        largeurTextField.getDocument().addDocumentListener(textFieldListener);
        emplacementx_textField.getDocument().addDocumentListener(textFieldListener);
        emplacementy_textField.getDocument().addDocumentListener(textFieldListener);
    }

    protected void viderToutVueDetails() {
        // Vide tous les champs de texte des détails
        emplacementx_textField.setText("");
        emplacementy_textField.setText("");
        largeurTextField.setText("");
        longueurTextField.setText("");
        creerFenetre_btn.setEnabled(false);
        redimensionerFenetre.setEnabled(false);
        deplacer_btn.setEnabled(false);
        supprimerFenetre.setEnabled(false);
    }

    protected void remplirAffichageDetails(Fenetre p_fenetre) {
        // Remplit les champs de texte avec les détails de la fenêtre fournie
        emplacementx_textField.setText(p_fenetre.getCoordonneesEmplacement()[0] + "");
        emplacementy_textField.setText(p_fenetre.getCoordonneesEmplacement()[1] + "");
        largeurTextField.setText(p_fenetre.getLargeur() + "");
        longueurTextField.setText(p_fenetre.getLongueur() + "");
        creerFenetre_btn.setEnabled(false);
        redimensionerFenetre.setEnabled(true);
        deplacer_btn.setEnabled(true);
        supprimerFenetre.setEnabled(true);
        accesoireValidite_label.setText("Accessoire " + (p_fenetre.estValide() ? "valide" : "invalide"));
    }


    private void updateButtonState() {
        // Récupérez les valeurs à partir des champs de texte
        String longueurFenetreText = longueurTextField.getText();
        String largeurFenetreText = largeurTextField.getText();
        String posFenetreXText = emplacementx_textField.getText();
        String posFenetreYText = emplacementy_textField.getText();


        // S'assure de valider et de convertir ces valeurs en types numériques ( pour livrable 3)
        if (longueurFenetreText != null && largeurFenetreText != null && posFenetreXText != null && posFenetreYText != null) {
            boolean estVide = longueurFenetreText.isEmpty() || largeurFenetreText.isEmpty() || posFenetreXText.isEmpty() || posFenetreYText.isEmpty();
            boolean match = longueurFenetreText.matches(UniteImperiale.FORMAT_UNITE_IMPERIAL.pattern())
                    && largeurFenetreText.matches(UniteImperiale.FORMAT_UNITE_IMPERIAL.pattern())
                    && posFenetreXText.matches(UniteImperiale.FORMAT_UNITE_IMPERIAL.pattern())
                    && posFenetreYText.matches(UniteImperiale.FORMAT_UNITE_IMPERIAL.pattern());
            boolean doesNotEndWithBackSlash = !(longueurFenetreText.endsWith("/") || largeurFenetreText.endsWith("/") || posFenetreXText.endsWith("/") || posFenetreYText.endsWith("/"));


            if (!estVide && match && doesNotEndWithBackSlash) {
                UniteImperiale longueurFenetre = new UniteImperiale(longueurFenetreText);
                UniteImperiale largeurFenetre = new UniteImperiale(largeurFenetreText);
                UniteImperiale posXFenetre = new UniteImperiale(posFenetreXText);
                UniteImperiale posYFenetre = new UniteImperiale(posFenetreYText);

                boolean valeursValide = longueurFenetre.estValide() && largeurFenetre.estValide() && posXFenetre.estValide() && posYFenetre.estValide();

                if (valeursValide && modeCreation) {
                    // Active le boutton "Créer la fenêtre" si les deux sont valides
                    creerFenetre_btn.setEnabled(true);
                } else if (valeursValide && !modeCreation) {
                    redimensionerFenetre.setEnabled(true);
                    deplacer_btn.setEnabled(true);
                    supprimerFenetre.setEnabled(true);
                }
                for (Mur mur : controleur.getComposantes()) {
                    for (Accessoire pAcc : mur.getAccessoiresListes()) {
                        if (pAcc.estSelectionne() && pAcc instanceof Fenetre) {
                            creerFenetre_btn.setEnabled(false);
                        }
                    }
                }
            } else {
                creerFenetre_btn.setEnabled(false);
                redimensionerFenetre.setEnabled(false);
                deplacer_btn.setEnabled(false);
                supprimerFenetre.setEnabled(false);
            }
        }
    }

    protected void creationMode(boolean p_estEnModeCreation) {
        modeCreation = p_estEnModeCreation;
    }

    private void creerFenetre_btnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_creerFenetre_btnActionPerformed
        // Action exécutée lors de la création d'une fenêtre
        String longueurText = longueurTextField.getText();
        String largeurText = largeurTextField.getText();
        String emplacementx = emplacementx_textField.getText();
        String emplacementy = emplacementy_textField.getText();

        UniteImperiale[] emplacements = {new UniteImperiale(emplacementx), new UniteImperiale(emplacementy)};
        Orientations orientation = mainWindow.getvueMode();
        controleur.creationFenetre(new UniteImperiale(largeurText), new UniteImperiale(longueurText), emplacements, orientation);
        //afficher la fenetre
        mainWindow.setvueMode(orientation);
        //reinitialiser champs de texte de largeur et longueur
        largeurTextField.setText("");
        longueurTextField.setText("");
        emplacementx_textField.setText("");
        emplacementy_textField.setText("");
        mainWindow.refresh();
    }//GEN-LAST:event_creerFenetre_btnActionPerformed


    private void supprimerFenetreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerFenetreActionPerformed
        // Action exécutée lors de la suppression d'une fenêtre

        // Parcourt tous les éléments du contrôleur pour trouver les accessoires sélectionnés qui sont des fenêtres
        for (Mur mur : controleur.getComposantes()) {
            for (Accessoire pAcc : mur.getAccessoiresListes()) {
                if (pAcc.estSelectionne() && pAcc instanceof Fenetre) {
                    Orientations o = mainWindow.getvueMode();
                    controleur.supprimerAccessoire(pAcc.getCoordonneesEmplacement(), o);
                    viderToutVueDetails();
                    mainWindow.detailsPanelVide();
                    mainWindow.setvueMode(o); // Met à jour l'orientation dans la fenêtre principale
                }
            }
        }
        mainWindow.refresh();
    }
//GEN-LAST:event_supprimerFenetreActionPerformed

    private void deplacer_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deplacer_btnActionPerformed
        // Action exécutée lors du déplacement d'un accessoire
        UniteImperiale[] coordonneesEmplacementNouveau = {new UniteImperiale(emplacementx_textField.getText()),
                new UniteImperiale(emplacementy_textField.getText())};

        // Parcourt tous les éléments du contrôleur pour trouver les accessoires sélectionnés
        for (Mur auto_element : controleur.getComposantes()) {
            for (Accessoire pAcc : auto_element.getAccessoiresListes()) {
                if (pAcc.estSelectionne()) { // Vérifie si l'accessoire est sélectionné
                    // Met à jour les coordonnées de l'accessoire avec les nouvelles coordonnées d'emplacement
                    controleur.updateCoordonnees(pAcc, coordonneesEmplacementNouveau, CaisseOutils.RATIO_TEST);
                    remplirAffichageDetails((Fenetre) pAcc); // Remplit l'affichage des détails de la fenêtre

                    Orientations orientation = mainWindow.getvueMode(); // Obtient l'orientation depuis la fenêtre principale
                    mainWindow.setvueMode(orientation); // Met à jour l'orientation dans la fenêtre principale

                    if (pAcc.estSelectionne() && !(emplacementx_textField.getText().isEmpty()) && !(emplacementy_textField.getText().isEmpty())) {
                        // Active le bouton "Déplacer" si les deux champs sont valides
                        deplacer_btn.setEnabled(true);
                    }
                }
            }
        }
        mainWindow.refresh();
    }//GEN-LAST:event_deplacer_btnActionPerformed

    private void largeurTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_largeurTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_largeurTextFieldActionPerformed


    private void redimensionerFenetreActionPerformed(java.awt.event.ActionEvent evt) {
        // Action exécutée lors du redimensionnement d'une fenêtre


        // Parcourt tous les éléments du contrôleur pour trouver les accessoires sélectionnés
        for (Mur auto_element : controleur.getComposantes()) {
            for (Accessoire pAcc : auto_element.getAccessoiresListes()) {
                if (pAcc.estSelectionne()) { // Vérifie si l'accessoire est sélectionné
                    // Met à jour les dimensions de l'accessoire avec les nouvelles valeurs de largeur et de longueur
                    controleur.updateAccessoireDimension(pAcc, new UniteImperiale(largeurTextField.getText()), new UniteImperiale(longueurTextField.getText()));
                    remplirAffichageDetails((Fenetre) pAcc); // Remplit l'affichage des détails de la fenêtre

                    Orientations orientation = mainWindow.getvueMode(); // Obtient l'orientation depuis la fenêtre principale
                    mainWindow.setvueMode(orientation); // Met à jour l'orientation dans la fenêtre principale

                    if (pAcc.estSelectionne() && !(largeurTextField.getText().isEmpty()) && !(longueurTextField.getText().isEmpty())) {
                        // Active le bouton "Redimensionner Fenêtre" si les deux champs sont valides
                        redimensionerFenetre.setEnabled(true);
                    }
                }
            }
        }
        mainWindow.refresh();
    }


    @Override
    public DataFlavor[] getTransferDataFlavors() {
        return new DataFlavor[0];
    }

    @Override
    public boolean isDataFlavorSupported(DataFlavor flavor) {
        return false;
    }

    @Override
    public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException, IOException {
        return null;
    }

    @Override
    public void dragGestureRecognized(DragGestureEvent dge) {

    }
}
